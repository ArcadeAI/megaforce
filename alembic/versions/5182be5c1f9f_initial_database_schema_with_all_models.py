"""Initial database schema with all models

Revision ID: 5182be5c1f9f
Revises: 
Create Date: 2025-08-12 15:01:14.198011

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5182be5c1f9f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'USER', name='userrole'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('input_sources',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('source_type', sa.Enum('TWITTER_KEYWORDS', 'TWITTER_USER', 'TWITTER_HASHTAG', 'REDDIT_SUBREDDIT', 'URL_SCRAPER', name='inputsourcetype'), nullable=False),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('schedule_config', sa.JSON(), nullable=True),
    sa.Column('owner_id', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_input_sources_id'), 'input_sources', ['id'], unique=False)
    op.create_table('personas',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('style_preferences', sa.JSON(), nullable=True),
    sa.Column('owner_id', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_personas_id'), 'personas', ['id'], unique=False)
    op.create_table('runs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('input_source_id', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['input_source_id'], ['input_sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_runs_id'), 'runs', ['id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('reference_type', sa.String(), nullable=True),
    sa.Column('owner_id', sa.String(), nullable=False),
    sa.Column('persona_ids', sa.JSON(), nullable=True),
    sa.Column('run_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_table('output_schemas',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('content_type', sa.Enum('TWEET_SINGLE', 'TWEET_THREAD', 'SOCIAL_COMMENT', 'TWITTER_REPLY', 'LINKEDIN_POST', 'LINKEDIN_COMMENT', 'BLOG_POST', 'REDDIT_COMMENT', 'FACEBOOK_COMMENT', 'INSTAGRAM_COMMENT', 'YOUTUBE_COMMENT', 'TWEET_SINGLE_UPPER', 'TWITTER_THREAD_UPPER', 'SOCIAL_COMMENT_UPPER', 'TWITTER_REPLY_UPPER', 'LINKEDIN_POST_UPPER', 'LINKEDIN_COMMENT_UPPER', 'BLOG_POST_UPPER', 'REDDIT_COMMENT_UPPER', 'FACEBOOK_COMMENT_UPPER', 'INSTAGRAM_COMMENT_UPPER', 'YOUTUBE_COMMENT_UPPER', name='outputtype'), nullable=False),
    sa.Column('generated_content', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING_REVIEW', 'APPROVED', 'REJECTED', 'PUBLISHED', name='outputstatus'), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('feedback_notes', sa.Text(), nullable=True),
    sa.Column('persona_id', sa.String(), nullable=False),
    sa.Column('source_document_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('publish_config', sa.JSON(), nullable=True),
    sa.Column('published_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['persona_id'], ['personas.id'], ),
    sa.ForeignKeyConstraint(['source_document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_output_schemas_id'), 'output_schemas', ['id'], unique=False)
    op.create_table('approval_history',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('output_schema_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('previous_status', sa.Enum('DRAFT', 'PENDING_REVIEW', 'APPROVED', 'REJECTED', 'PUBLISHED', name='outputstatus'), nullable=True),
    sa.Column('new_status', sa.Enum('DRAFT', 'PENDING_REVIEW', 'APPROVED', 'REJECTED', 'PUBLISHED', name='outputstatus'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['output_schema_id'], ['output_schemas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_approval_history_id'), 'approval_history', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_approval_history_id'), table_name='approval_history')
    op.drop_table('approval_history')
    op.drop_index(op.f('ix_output_schemas_id'), table_name='output_schemas')
    op.drop_table('output_schemas')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_runs_id'), table_name='runs')
    op.drop_table('runs')
    op.drop_index(op.f('ix_personas_id'), table_name='personas')
    op.drop_table('personas')
    op.drop_index(op.f('ix_input_sources_id'), table_name='input_sources')
    op.drop_table('input_sources')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
